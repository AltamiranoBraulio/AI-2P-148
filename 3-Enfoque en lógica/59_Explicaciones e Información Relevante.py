# Importamos pandas para manejar datos en forma de tabla
import pandas as pd

# Importamos numpy para c치lculos num칠ricos
import numpy as np

# Importamos un 츼rbol de Decisi칩n como modelo explicativo
from sklearn.tree import DecisionTreeClassifier

# Importamos una funci칩n para visualizar la importancia de las caracter칤sticas
from sklearn.tree import export_text

# Creamos un conjunto de datos simple para clasificar frutas
# Cada fruta tiene: Color (0=verde, 1=rojo), Tama침o (cm), Peso (g)
data = {
    'Color': [0, 1, 0, 1, 0],  # 0=verde, 1=rojo
    'Tama침o': [5, 6, 5, 7, 4],  # Tama침o en cm
    'Peso': [100, 150, 90, 200, 80],  # Peso en gramos
}

# Creamos las etiquetas de cada fruta (0=Manzana, 1=Sand칤a)
labels = [0, 1, 0, 1, 0]  # Etiquetas: Manzana o Sand칤a

# Convertimos los datos en un DataFrame para manipularlos como tabla
df = pd.DataFrame(data)

# Creamos el modelo de 츼rbol de Decisi칩n
model = DecisionTreeClassifier()

# Entrenamos el modelo usando los datos y las etiquetas
model.fit(df, labels)

# Ahora vamos a hacer una predicci칩n para una nueva fruta desconocida
# Nueva fruta: Color=rojo (1), Tama침o=6cm, Peso=160g
nueva_fruta = np.array([[1, 6, 160]])  # Definimos la nueva muestra

# Hacemos la predicci칩n usando el modelo entrenado
prediccion = model.predict(nueva_fruta)

# Mostramos la predicci칩n (0=Manzana, 1=Sand칤a)
print("Predicci칩n para la nueva fruta (0=Manzana, 1=Sand칤a):", prediccion[0])

# 游댠 Ahora viene lo importante: explicar la decisi칩n del modelo
# Usamos export_text para imprimir el 치rbol de decisi칩n como texto explicativo
explicacion = export_text(model, feature_names=list(df.columns))

# Mostramos la explicaci칩n completa del 치rbol
print("\nExplicaci칩n del modelo (츼rbol de Decisi칩n):\n")
print(explicacion)

# 游꿢 Extra: Mostramos la relevancia (importancia) de cada atributo
importancias = model.feature_importances_

# Recorremos cada caracter칤stica para mostrar su relevancia num칠rica
print("\nInformaci칩n Relevante (Importancia de cada atributo):")
for nombre, importancia in zip(df.columns, importancias):
    print(f"- {nombre}: {importancia:.2f}")  # Mostramos con 2 decimales
