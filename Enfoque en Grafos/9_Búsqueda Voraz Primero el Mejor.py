import heapq
from collections import defaultdict
metro_gdl = {
    'Perif√©rico Sur': {'Santuario': 5},
    'Santuario': {'Perif√©rico Sur': 5, 'Washington': 3},
        'Washington': {'Santuario': 3, 'Ju√°rez': 2},
    'Ju√°rez': {'Washington': 2, 'Mexicaltzingo': 2},
    'Mexicaltzingo': {'Ju√°rez': 2, 'Oblatos': 3},
    'Ju√°rez': {'Plaza Universidad': 2},  # Conexi√≥n entre l√≠neas
    'Plaza Universidad': {'Ju√°rez': 2, 'San Juan de Dios': 3},
    'San Juan de Dios': {'Plaza Universidad': 3, 'Belisario Dom√≠nguez': 2},
    'Central de Autobuses': {'Perif√©rico Belenes': 4},
    'Perif√©rico Belenes': {'Central de Autobuses': 4, 'San Andr√©s': 3}
}
heuristicas_gdl = {
    'Perif√©rico Sur': 6,
    'Santuario': 5,
    'Washington': 3,
    'Ju√°rez': 1,
    'Mexicaltzingo': 2,
    'Oblatos': 3,
    'Plaza Universidad': 0,  # Nuestro destino
    'San Juan de Dios': 1,
    'Belisario Dom√≠nguez': 2,
    'Central de Autobuses': 4,
    'Perif√©rico Belenes': 3,
    'San Andr√©s': 2
}
def buscar_ruta_metro(origen, destino):
    cola_prioridad = []
    heapq.heappush(cola_prioridad, (heuristicas_gdl[origen], origen, [origen]))
    visitados = set()
    print(f"üîç Buscando ruta de {origen} a {destino}...")
    while cola_prioridad:
        _, estacion, ruta = heapq.heappop(cola_prioridad)
        if estacion == destino:
            print(f"\nüéâ Ruta encontrada ({len(ruta)-1} transbordos):")
            print(" ‚Üí ".join(ruta))
            print("\nüöá Estaciones:", len(ruta))
            print("üîÑ Transbordos:", len([x for x in ruta if x == 'Ju√°rez'])-1)
            return ruta

